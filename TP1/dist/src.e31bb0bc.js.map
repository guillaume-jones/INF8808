{"version":3,"sources":["scripts/viz-helper.js","scripts/init.js","scripts/viz.js","index.js"],"names":["updateHeader","header","d3","select","append","text","generateData","size","randomUniform","uniformGenerator","data","Array","from","length","x","y","getDotCount","selectAll","nodes","updateInfoPanel","nbOfDots","styleCircles","g","attr","generateG","margin","left","top","appendXAxis","appendYAxis","appendGraphLabels","setCanvasSize","width","height","updateXScale","scaleLinear","domain","range","updateYScale","drawXAxis","xScale","call","axisBottom","ticks","drawYAxis","yScale","axisLeft","positionLabels","updateData","join","positionCircles","d","setClickHandler","on","right","bottom","padding","init","viz","vizHelper","build","maxWidth","node","getBoundingClientRect","svgSize","graphSize","window","addEventListener"],"mappings":"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,CAAzB,IGEmD,CAACE;ADT/C,EFQL,EGDoB,CAAlB,CHCIjB,GERQ4B,CFQJ,GAAG3B,KAAK,CAACC,EERd,CAAuBqB,CFQf,CAAW,IERnB,EAA+B;ADQ/B,ECPL,ECWEyB,AHJwB7C,GGIrB,CAACkB,CFJQD,ACPP5B,CFOyB,CEPvB,CFOyBK,AEPxB4B,SCWR,CAAkB6B,CDXb,GDOF,ACNF5B,CDM8Bd,CAA5B,CEIsB,CAACU,AFJQ,ECP7B,CACG,CAAC,CCUT,ADVQ,ECUyBgC,ADVrB,GAAJ,CADH,EAEJ3B,CCSuC,CAACJ,GDXpC,CAEE,CAACA,CCSR,KDTO,EAAS,CAAT,CAFF,CAAP;AAGD,EDKCX,ADDwB,CCCvB,ADDY,CGMX,AFLAlB,CDDwC,GGMlCoC,EFLR,CAAS,GEKK,GAAGkB,AFLjB,ADDgD,ECE7CrD,CEIiB,CAAC6B,EFLrB,CACQ,OADR,EEKiB,AFHdX,CEG+B0C,GFLlC,CAEQ,KEGmC,CAACjC,CFL5C,EAEiB,EEGA,CAAf,UFLF;ACHF,EDOEV,CAAC,CEEC,AFFAlB,ADJA,IGMMyC,EFFR,CAAS,ADJA,GGMK,GAAGa,AFFjB,EACGrD,CECiB,CAACiC,EFFrB,CACQ,OADR,EEEiB,AFAdf,CEA+B0C,GFFlC,CAEQ,KEAmC,CAAChC,CFF5C,EAEiB,GEAA,CAAf,SFFF,EAGGV,IAHH,CAGQ,WAHR,EAGqB,aAHrB;ACNF,EDWED,CAAC,CEDCoC,AFCAtD,EDREU,CGOC,AHPA,CGOCyB,CHPC9B,CCQP,CAAS,MEDP,AFCF,CEDgB+B,CFEbnC,IADH,CEDE,AFEM,CDTe,CGOC4D,CHRf,QGQwB,CAAChC,MAAhC,KFCF,EAEGV,IAFH,CAEQ,OAFR,EAEiB,OAFjB;AAGD,ACbD,ICUImC,EHRyB3C,CGQtB,AHRuB,CGQtB6B,CHRwBnC,QGQ5B,CAAcoC,MAAd,CHR4C;AEDhD,ICWIa,AHXO,CAAP,EGWG,CAACR,eAAJ,CAAoB5B,CAApB,EAAuBkB,MAAvB,EAA+BK,MAA/B;ADVJ,EFEG,CAJY,CGaXa,AHbF,GGaK,CAACX,cAAJ,CAAmBzB,CAAnB,EAAsB2C,SAAS,CAACjC,KAAhC,E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","file":"src.e31bb0bc.js","sourceRoot":"../src","sourcesContent":["/**\n *   Builds the header for the webpage, including a title and welcome message.\n */\n export function updateHeader () {\n  const header = d3.select('header')\n\n  header\n    .append('h1')\n    .text('TP1')\n\n  header\n    .append('div')\n    .text('Bienvenue au cours INF8808 : Visualisation de donnÃ©es.')\n}\n\n/**\n *   Generates random data to be displayed in the scatter plot.\n *   The data must be a 2 X m array of randomly generated (x, y) coordinates, with :\n *\n *      - x : an integer in [1, 99],\n *      - y : an integer in [1, 99],\n *\n *   and where m is a random number in [1, 10]. Each coordinate is represented\n *   as an object with keys 'x' and 'y'. Each coordinate object is contained in the\n *   resulting array.\n *\n *   For example, the coordinates could be :\n *\n *             x  |  y\n *           ----------\n *             99 | 4\n *             27 | 89\n *             17 | 42\n *\n *   @returns {object[]} The generated data\n */\nexport function generateData () {\n  const size = d3.randomUniform(1, 11)()\n\n  const uniformGenerator = d3.randomUniform(1, 100)\n  const data = Array.from({ length: size }, () => {\n    return {\n      x: uniformGenerator(), y: uniformGenerator()\n    }\n  })\n  return data\n}\n\n/**\n * @returns {number} The current number of circles displayed in the scatter plot.\n */\nexport function getDotCount () {\n  return d3.selectAll('.dot').nodes().length\n}\n\n/**\n * Updates the text in the info panel below the graph so it displays the current circle count,\n * with the number displayed in bold.\n */\nexport function updateInfoPanel () {\n  const nbOfDots = getDotCount()\n\n  d3.select('.dot-count')\n    .text(nbOfDots)\n\n  d3.select('.dot-label')\n    .text(nbOfDots > 1 ? 'points' : 'point')\n}\n\n/**\n * Selects all the SVG circles and sets their visual appearance.\n * Sets their radius to 5 and their fill color to #07BEB8.\n *\n * @param {*} g The d3 Selection of the graph's g SVG element\n */\nexport function styleCircles (g) {\n  g.selectAll('.dot')\n    .attr('r', 5)\n    .attr('fill', '#07BEB8')\n}\n","\n/**\n * Generates the SVG element g which will contain the data visualisation.\n *\n * @param {object} margin The desired margins around the graph\n * @returns {*} The d3 Selection for the created g element\n */\nexport function generateG (margin) {\n  return d3.select('#example-graph')\n    .select('svg')\n    .append('g')\n    .attr('id', 'graph-g')\n    .attr('transform',\n      'translate(' + margin.left + ',' + margin.top + ')')\n}\n\n/**\n * Appends an SVG g element which will contain the x axis.\n *\n * @param {*} g The d3 Selection of the graph's g SVG element\n */\nexport function appendXAxis (g) {\n  g.append('g')\n    .attr('class', 'x axis')\n}\n\n/**\n * Appends an SVG g element which will contain the y axis.\n *\n * @param {*} g The d3 Selection of the graph's g SVG element\n */\nexport function appendYAxis (g) {\n  g.append('g')\n    .attr('class', 'y axis')\n}\n/**\n * Appends the labels for the x axis, the y axis and the title of the scatter graph.\n *\n * @param {*} g The d3 Selection of the graph's g SVG element\n */\nexport function appendGraphLabels (g) {\n  g.append('text')\n    .text('Axe x')\n    .attr('class', 'x axis-text')\n\n  g.append('text')\n    .text('Axe y')\n    .attr('class', 'y axis-text')\n    .attr('transform', 'rotate(-90)')\n\n  g.append('text')\n    .text('Mon premier graphique')\n    .attr('class', 'title')\n}\n","import { generateData, styleCircles, updateInfoPanel } from './viz-helper.js'\n\n/**\n * Sets the size of the SVG canvas containing the graph.\n *\n * @param {number} width The desired width\n * @param {number} height The desired height\n */\nexport function setCanvasSize (width, height) {\n  d3.select('#example-graph').select('svg')\n    .attr('width', width)\n    .attr('height', height)\n}\n\n/**\n * Creates a linear scale to map the input domain to a position in x.\n *\n * @param {number} width The width of the graph\n * @returns {*} The x scale\n */\nexport function updateXScale (width) {\n  return d3.scaleLinear()\n    .domain([0, 100])\n    .range([0, width])\n}\n\n/**\n * Creates a linear scale to map the input domain to a position in y.\n *\n * @param {number} height The height of the graph\n * @returns {*} The y scale\n */\nexport function updateYScale (height) {\n  return d3.scaleLinear()\n    .domain([0, 100])\n    .range([height, 0])\n}\n\n/**\n * Draws the x axis at the bottom of the scatter plot.\n *\n * @param {*} xScale The scale to use for the x axis\n * @param {number} height The height of the graph\n */\nexport function drawXAxis (xScale, height) {\n  d3.select('.x.axis')\n    .attr('transform', 'translate(0, ' + height + ')')\n    .call(d3.axisBottom(xScale).ticks(5))\n}\n\n/**\n * Draws the y axis at the left of the scatter plot.\n *\n * @param {*} yScale The scale to use for the y axis\n */\nexport function drawYAxis (yScale) {\n  d3.select('.y.axis').call(d3.axisLeft(yScale).ticks(5))\n}\n\n/**\n * Positions the x axis label, y axis label and title label on the graph.\n *\n * @param {*} g The d3 Selection of the graph's g SVG element\n * @param {number} width The width of the graph\n * @param {number} height The height of the graph\n */\nexport function positionLabels (g, width, height) {\n  g.select('.x.axis-text')\n    .attr('x', width / 2)\n    .attr('y', height + 50)\n\n  g.select('.y.axis-text')\n    .attr('x', -50)\n    .attr('y', height / 2)\n\n  g.select('.title')\n    .attr('x', width / 2)\n    .attr('y', -35)\n}\n\n/**\n * Binds the data to the scatter plot.\n *\n * @param {*} g  The d3 Selection of the graph's g SVG element\n * @param {object[]} data The data to use to generate the scatter plot\n */\nexport function updateData (g, data) {\n  g.selectAll('.dot')\n    .data(data)\n    .join('circle')\n    .attr('class', 'dot')\n}\n\n/**\n * Uses the data associated to each circle in the scatter plot to position it at its (x,y) coordinate.\n *\n * @param {*} g The d3 Selection of the graph's g SVG element\n * @param {*} xScale The scale used to position the element in x\n * @param {*} yScale The scale used to position the element in x\n */\nexport function positionCircles (g, xScale, yScale) {\n  g.selectAll('.dot')\n    .attr('cx', function (d) { return xScale(d.x) })\n    .attr('cy', function (d) { return yScale(d.y) })\n}\n\n/**\n * Handles clicks on the 'Actualiser\" button. When clicked, the data is regenerated and\n * the display is updated.\n *\n * @param {*} g The d3 Selection of the graph's g SVG element\n * @param {*} xScale The xScale used to display the graph\n * @param {*} yScale The xScale used to display the graph\n */\nexport function setClickHandler (g, xScale, yScale) {\n  d3.select('#update-btn')\n    .on('click', () => {\n      updateData(g, generateData())\n      positionCircles(g, xScale, yScale)\n      styleCircles(g)\n      updateInfoPanel()\n    })\n}\n","'use strict'\n\nimport * as vizHelper from './scripts/viz-helper.js'\nimport * as init from './scripts/init.js'\nimport * as viz from './scripts/viz.js'\n\n/**\n * @file This file is the entry-point for the the code for TP1 for the course INF8808.\n * @author Olivia GÃ©linas\n * @version v1.0.0\n */\n\n(function (d3) {\n  const margin = { top: 85, right: 85, bottom: 80, left: 80 }\n  const padding = 50\n\n  const g = init.generateG(margin)\n\n  init.appendXAxis(g)\n  init.appendYAxis(g)\n\n  init.appendGraphLabels(g)\n\n  viz.updateData(g, vizHelper.generateData())\n\n  vizHelper.updateHeader()\n  vizHelper.updateInfoPanel()\n\n  /**\n   *   This function builds the graph and makes it interactive by setting up the click handler.\n   */\n  function build () {\n    const maxWidth = d3.select('#example-graph').node().getBoundingClientRect().width\n\n    const svgSize = {\n      width: maxWidth - padding * 2,\n      height: 450\n    }\n\n    const graphSize = {\n      width: svgSize.width - margin.right - margin.left,\n      height: svgSize.height - margin.bottom - margin.top\n    }\n\n    viz.setCanvasSize(svgSize.width, svgSize.height)\n\n    const xScale = viz.updateXScale(graphSize.width)\n    const yScale = viz.updateYScale(graphSize.height)\n\n    viz.drawXAxis(xScale, graphSize.height)\n    viz.drawYAxis(yScale)\n\n    viz.positionCircles(g, xScale, yScale)\n    viz.positionLabels(g, graphSize.width, graphSize.height)\n\n    vizHelper.styleCircles(g)\n\n    viz.setClickHandler(g, xScale, yScale)\n  }\n\n  build()\n\n  window.addEventListener('resize', () => {\n    build()\n  })\n})(d3)\n"]}